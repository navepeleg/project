name: 'Terraform Destroy'

on:
  workflow_dispatch
env:
    working-directory: terraform
    eksname: 'Fargate'

jobs:
  terraform_plan:
    name: 'Terraform Plan Destroy'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
      working-directory: ${{ env.working-directory }}

    # Generates an execution plan for Terraform
    - name: Terraform Plan Destroy
      continue-on-error: true
      run: terraform plan -destroy -out "tf_plan_destroy" -input=false
      working-directory: ${{ env.working-directory }}

    - name: Upload TF Plan
      uses: actions/upload-artifact@v2
      with:
        name: tf_plan_destroy
        path: ${{ env.working-directory }}/tf_plan_destroy
        if-no-files-found: error
        retention-days: 1

      # On push to "main", build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
  
  terraform_destroy:
    name: 'Terraform Destroy'
    runs-on: ubuntu-latest
    environment: production
    needs: [terraform_plan]

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1.7.0
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1
        
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
      working-directory: ${{ env.working-directory }}

    - name: Download TF Plan
      uses: actions/download-artifact@v3
      with:
        name: tf_plan_destroy
        path: ./${{ env.working-directory }}

    - name: Destroy Nginx
      continue-on-error: true
      run: |
        aws eks --region eu-west-1 update-kubeconfig --name Fargate
        helm delete nginx

    - name: Terraform Destroy
      run: |
        terraform show "tf_plan_destroy"
        terraform apply -input=false tf_plan_destroy
      working-directory: ${{ env.working-directory }} 